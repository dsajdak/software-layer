--- GEMMA-0.98.5/contrib/catch-1.9.7/catch.hpp.orig	2024-07-02 12:08:29.456420182 -0400
+++ GEMMA-0.98.5/contrib/catch-1.9.7/catch.hpp	2024-07-02 12:15:28.547409275 -0400
@@ -6500,7 +6500,9 @@
         static bool isSet;
         static struct sigaction oldSigActions [sizeof(signalDefs)/sizeof(SignalDefs)];
         static stack_t oldSigStack;
-        static char altStackMem[SIGSTKSZ];
+	// SIGSTKSZ is not const anymore with recent glibc
+        //static char altStackMem[SIGSTKSZ];
+        static char altStackMem[32768];
 
         static void handleSignal( int sig ) {
             std::string name = "<unknown signal>";
@@ -6520,7 +6522,9 @@
             isSet = true;
             stack_t sigStack;
             sigStack.ss_sp = altStackMem;
-            sigStack.ss_size = SIGSTKSZ;
+            // SIGSTKSZ is not const anymore with recent glibc
+            //sigStack.ss_size = SIGSTKSZ;
+            sigStack.ss_size = 32768;
             sigStack.ss_flags = 0;
             sigaltstack(&sigStack, &oldSigStack);
             struct sigaction sa = { 0 };
@@ -6551,7 +6555,9 @@
     bool FatalConditionHandler::isSet = false;
     struct sigaction FatalConditionHandler::oldSigActions[sizeof(signalDefs)/sizeof(SignalDefs)] = {};
     stack_t FatalConditionHandler::oldSigStack = {};
-    char FatalConditionHandler::altStackMem[SIGSTKSZ] = {};
+    // SIGSTKSZ is not const anymore with recent glibc
+    //char FatalConditionHandler::altStackMem[SIGSTKSZ] = {};
+    char FatalConditionHandler::altStackMem[32768] = {};
 
 } // namespace Catch
 
